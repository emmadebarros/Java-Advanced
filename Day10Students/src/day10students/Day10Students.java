/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//don't forget to mention error comments to show him our understanding of the errors
package day10students;

import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author emmadebarros
 */
public class Day10Students extends javax.swing.JFrame {

    DefaultListModel<Student> studentListModel = new DefaultListModel<>();

    Database db;

    Student currentEditedStudent = null;
    BufferedImage currentBuffImage;

    private FileNameExtensionFilter filter = new FileNameExtensionFilter("Image files (*.gif, *.png, *.jpg, *.jpeg) ", "gif", "png", "jpg", "jpeg");

    /**
     * Creates new form Day10Students
     */
    public Day10Students() {
        try {
            initComponents();
            fileChooser.setFileFilter(filter);
            db = new Database();
            reloadFromDatabase();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this,
                    "Failed to connect " + ex.getMessage(),
                    "Database error",
                    JOptionPane.ERROR_MESSAGE);
            System.exit(1); // FATAL ERROR, EXIT PROGRAM
        }
    }

    private void reloadFromDatabase() {
        try {
            ArrayList<Student> list = db.getAllStudents();
            studentListModel.clear(); // remove any items that may be in model
            for (Student student : list) {
                studentListModel.addElement(student);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this,
                    "Failed to fetch records: " + ex.getMessage(),
                    "Database error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        dlgAddEdit = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dlgAddEdit_lblId = new javax.swing.JLabel();
        dlgAddEdit_tfName = new javax.swing.JTextField();
        dlgAddEdit_lblImage = new javax.swing.JLabel();
        dlgAddEdit_btSave = new javax.swing.JButton();
        dlgAddEdit_btCancel = new javax.swing.JButton();
        dlgAddEdit_btRmvPic = new javax.swing.JButton();
        fileChooser = new javax.swing.JFileChooser();
        pMenu = new javax.swing.JPopupMenu();
        pup_miEdit = new javax.swing.JMenuItem();
        pup_miDelete = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        miExit = new javax.swing.JMenuItem();
        miExportCsv = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        miEditAddStudent = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jMenu1.setText("jMenu1");

        dlgAddEdit.setResizable(false);

        jLabel2.setText("ID:");

        jLabel3.setText("Name:");

        jLabel4.setText("Photo (Click to pick):");

        dlgAddEdit_lblId.setText("-");

        dlgAddEdit_lblImage.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        dlgAddEdit_lblImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dlgAddEdit_lblImageMouseClicked(evt);
            }
        });

        dlgAddEdit_btSave.setText("Save");
        dlgAddEdit_btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlgAddEdit_btSaveActionPerformed(evt);
            }
        });

        dlgAddEdit_btCancel.setText("Cancel");
        dlgAddEdit_btCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlgAddEdit_btCancelActionPerformed(evt);
            }
        });

        dlgAddEdit_btRmvPic.setText("Remove Picture");
        dlgAddEdit_btRmvPic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlgAddEdit_btRmvPicActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dlgAddEditLayout = new javax.swing.GroupLayout(dlgAddEdit.getContentPane());
        dlgAddEdit.getContentPane().setLayout(dlgAddEditLayout);
        dlgAddEditLayout.setHorizontalGroup(
            dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgAddEditLayout.createSequentialGroup()
                .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(dlgAddEditLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(dlgAddEdit_btRmvPic, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(9, 9, 9)
                .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dlgAddEdit_lblId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dlgAddEdit_tfName)
                    .addComponent(dlgAddEdit_lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(dlgAddEditLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(dlgAddEdit_btSave, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(dlgAddEdit_btCancel, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)))
                .addContainerGap())
        );
        dlgAddEditLayout.setVerticalGroup(
            dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgAddEditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(dlgAddEdit_lblId))
                .addGap(18, 18, 18)
                .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(dlgAddEdit_tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(dlgAddEdit_lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dlgAddEdit_btSave)
                    .addComponent(dlgAddEdit_btCancel)
                    .addComponent(dlgAddEdit_btRmvPic))
                .addGap(30, 30, 30))
        );

        pup_miEdit.setText("Edit");
        pup_miEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pupEditClicked(evt);
            }
        });
        pMenu.add(pup_miEdit);

        pup_miDelete.setText("Delete");
        pup_miDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pupDeleteClicked(evt);
            }
        });
        pMenu.add(pup_miDelete);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(400, 400));

        jLabel1.setText("...");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(jLabel1, java.awt.BorderLayout.PAGE_END);

        jList1.setModel(studentListModel);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        getContentPane().add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jMenu2.setText("File");

        miExit.setText("Exit");
        miExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExitActionPerformed(evt);
            }
        });
        jMenu2.add(miExit);

        miExportCsv.setText("Export to *.csv");
        miExportCsv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExportCsvActionPerformed(evt);
            }
        });
        jMenu2.add(miExportCsv);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Edit");

        miEditAddStudent.setText("Add Student");
        miEditAddStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miEditAddStudentActionPerformed(evt);
            }
        });
        jMenu3.add(miEditAddStudent);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void miEditAddStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miEditAddStudentActionPerformed
        // TODO add your handling code here:
        //mi means menu item ---> when we clicked on the AddStudent menu item it shows the dialog box
        //cleanup inputs
        dlgAddEdit_tfName.setText("");
        dlgAddEdit_lblId.setText("-");
        dlgAddEdit_lblImage.setIcon(null);
        //show dialog
        dlgAddEdit.pack();//tells swing to measure the size of the window and make it the correct size
        dlgAddEdit.setLocationRelativeTo(this);//places it relative to/on top of the parent window(the jFrame)
        dlgAddEdit.setModal(true);//disable the parent while dialog is being shown
        dlgAddEdit_btSave.setText("Add Student");
        dlgAddEdit.setVisible(true);//shows the custom dialog box (make it non-resizable through properties)
    }//GEN-LAST:event_miEditAddStudentActionPerformed

    public static BufferedImage resize(BufferedImage img, int newW, int newH) {
        // FIXME: keep original width/height ratio
        Image tmp = img.getScaledInstance(newW, newH, Image.SCALE_SMOOTH);
        BufferedImage dimg = new BufferedImage(newW, newH, BufferedImage.TYPE_INT_ARGB);

        Graphics2D g2d = dimg.createGraphics();
        g2d.drawImage(tmp, 0, 0, null);
        g2d.dispose();

        return dimg;
    }

    private BufferedImage byteArrayToBufferedImage(byte[] imageData) throws IOException {
        ByteArrayInputStream bais = new ByteArrayInputStream(imageData);
        return ImageIO.read(bais);
    }

    private byte[] bufferedImageToByteArray(BufferedImage bi) throws IOException {
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        if (!ImageIO.write(bi, "png", baos)) {
            throw new IOException("Error creating png data");
        }
        byte[] imageBytes = baos.toByteArray();
        return imageBytes;
    }

    private void dlgAddEdit_lblImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dlgAddEdit_lblImageMouseClicked
        // TODO add your handling code here:
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            try {
                File chosenFile = fileChooser.getSelectedFile();
                currentBuffImage = ImageIO.read(chosenFile);
                // FIXME: use constants or ask JLabel
                currentBuffImage = resize(currentBuffImage, 150, 150);
                Icon icon = new ImageIcon(currentBuffImage);
                dlgAddEdit_lblImage.setIcon(icon);
            } catch (IOException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, ex.getMessage(),
                        "File error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_dlgAddEdit_lblImageMouseClicked

    private void dlgAddEdit_btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlgAddEdit_btSaveActionPerformed
        // TODO add your handling code here:
        try {
            //check for errors and collect them
            ArrayList<String> errorList = new ArrayList<>();
            String name = dlgAddEdit_tfName.getText();
            if (name.length() < 2 || name.length() > 45) {
                errorList.add("Name must be 2-45 characters long");
            }

            //
            if (!errorList.isEmpty()) {
                JOptionPane.showMessageDialog(this, String.join("\n", errorList),
                        "Input error(s)", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // prepare bytes of image for insert
            byte[] imageBytes = null;
            // convert to current image to byte array
            if (currentBuffImage != null) {
                imageBytes = bufferedImageToByteArray(currentBuffImage); // IOException
            }

            if (currentEditedStudent == null) {
                Student student = new Student(0, name, imageBytes);
                db.addStudent(student);
            } else {
                currentEditedStudent.name = name;
                currentEditedStudent.image = imageBytes;
                db.updateStudent(currentEditedStudent);
                //System.out.println("updated"); verif
            }
            reloadFromDatabase();
            dlgAddEdit.setVisible(false);//dismiss the dialog
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this,
                    ex.getMessage(),
                    "Database error",
                    JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Data error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_dlgAddEdit_btSaveActionPerformed

    private void dlgAddEdit_btCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlgAddEdit_btCancelActionPerformed
        // TODO add your handling code here:
        dlgAddEdit.setVisible(false);
    }//GEN-LAST:event_dlgAddEdit_btCancelActionPerformed

    private void editSelection(Student studentSelected) {

        try {
            //fetch full record, including the blob/image
            currentEditedStudent = db.getStudentById(studentSelected.id);
            dlgAddEdit_lblId.setText(currentEditedStudent.id + "");
            dlgAddEdit_tfName.setText(currentEditedStudent.name);

            //byte[] array to BufferedImage to Icon
            if (currentEditedStudent.image == null) {
                dlgAddEdit_lblImage.setIcon(null);
                dlgAddEdit_lblImage.setText("No image. Click here to add an image.");
                currentBuffImage = null;
            } else {
                try {
                    currentBuffImage = byteArrayToBufferedImage(currentEditedStudent.image);
                } catch (IOException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error converting image",
                            JOptionPane.ERROR_MESSAGE);
                }
                //FIXME: use constants or ask JLabel
                currentBuffImage = resize(currentBuffImage, 150, 150);
                Icon icon = new ImageIcon(currentBuffImage);
                dlgAddEdit_lblImage.setIcon(icon);
            }
            //show dialog
            dlgAddEdit.pack();//tells swing to measure the size of the window and make it the correct size
            dlgAddEdit.setLocationRelativeTo(this);//places it relative to/on top of the parent window(the jFrame)
            dlgAddEdit.setModal(true);//disable the parent while dialog is being shown
            dlgAddEdit_btSave.setText("Edit Student");
            dlgAddEdit.setVisible(true);//shows the custom dialog box (make it non-resizable through properties)
        } catch (SQLException exc) {
            exc.printStackTrace();
            JOptionPane.showMessageDialog(this,
                    exc.getMessage(),
                    "Database error",
                    JOptionPane.ERROR_MESSAGE);
        }

    }


    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        /*
        if (evt.getClickCount() == 2 && evt.getButton() == evt.BUTTON1) {
            //System.out.println("double clicked");//verif
            //cleanup inputs
            dlgAddEdit_tfName.setText("");
            dlgAddEdit_lblId.setText("-");
            dlgAddEdit_lblImage.setIcon(null);

            //Fill the inputs with correct info
            Student s = studentListModel.get(jList1.getSelectedIndex());

            try {
                //Fetch info from db
                Student sdb = db.getStudentById(s.id);
                System.out.println(sdb);

                //dlgAddEdit_lblId.setText(Integer.toString(sdb.id));
                //dlgAddEdit_tfName.setText(sdb.name);
                //Icon icon = new ImageIcon(sdb.image);
                //dlgAddEdit_lblImage.setIcon(icon);
            } catch (SQLException exc) {
                exc.printStackTrace();
                JOptionPane.showMessageDialog(this,
                        exc.getMessage(),
                        "Database error",
                        JOptionPane.ERROR_MESSAGE);
            }

            //show dialog
            dlgAddEdit.pack();//tells swing to measure the size of the window and make it the correct size
            dlgAddEdit.setLocationRelativeTo(this);//places it relative to/on top of the parent window(the jFrame)
            dlgAddEdit.setModal(true);//disable the parent while dialog is being shown
            dlgAddEdit_btSave.setText("Add Student");
            dlgAddEdit.setVisible(true);//shows the custom dialog box (make it non-resizable through properties)

        }
         */

        if (SwingUtilities.isRightMouseButton(evt)) {
            int row = jList1.locationToIndex(evt.getPoint());
            jList1.setSelectedIndex(row);
            currentEditedStudent = jList1.getSelectedValue();
            pMenu.show(this, evt.getX(), evt.getY());
            //jList1.clearSelection();
        }

        if (evt.getClickCount() == 2) {
            int index = jList1.locationToIndex(evt.getPoint());
            //System.out.println(index);
            jList1.setSelectedIndex(index);
        } else {
            return; //do nothing if it is not a double-click
        }

        Student studentSelected = jList1.getSelectedValue();

        if (studentSelected == null) {
            return; //do nothing, no selection
        }

        editSelection(studentSelected);

    }//GEN-LAST:event_jList1MouseClicked

    private void dlgAddEdit_btRmvPicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlgAddEdit_btRmvPicActionPerformed
        // TODO add your handling code here:
        if (currentEditedStudent.image == null) {
            //custom title, error icon
            JOptionPane.showMessageDialog(this,
                    "No image to delete.",
                    "Input error",
                    JOptionPane.ERROR_MESSAGE); // code from : https://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html
            return;
        } else {
            dlgAddEdit_lblImage.setIcon(null);
            currentEditedStudent.image = null;
        }
    }//GEN-LAST:event_dlgAddEdit_btRmvPicActionPerformed

    private void pupEditClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pupEditClicked
        // TODO add your handling code here:

        Student studentSelected = jList1.getSelectedValue();

        if (studentSelected == null) {
            return; //do nothing, no selection
        }

        editSelection(studentSelected);
    }//GEN-LAST:event_pupEditClicked

    private void pupDeleteClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pupDeleteClicked
        // TODO add your handling code here:
        currentEditedStudent = jList1.getSelectedValue();

        Object[] options = {"Delete",
            "Cancel"};
        int n = JOptionPane.showOptionDialog(this,
                "Are you sure you want to delete " + currentEditedStudent.toString(),
                "Delete student from database",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, //do not use a custom Icon
                options, //the titles of buttons
                options[0]); //default button title

        if (n == JOptionPane.YES_NO_OPTION) {

            if (currentEditedStudent == null) {// shouldn't happen but playing it safe
                return;
            }

            try {

                db.deleteStudent(currentEditedStudent);
                reloadFromDatabase();

            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,
                        "Failed to fetch records" + ex.getMessage(),
                        "Databse error",
                        JOptionPane.ERROR_MESSAGE);
            }// end catch block
        }// end if(n == JOptionPane.YES_NO_OPTION) block

    }//GEN-LAST:event_pupDeleteClicked

    private void miExportCsvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExportCsvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_miExportCsvActionPerformed

    private void miExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExitActionPerformed
        // TODO add your handling code here:

        //THE NAMES ARE REVERTED LOL for Exit and ExportToCSV
        Object[] options = {"Exit",
            "Cancel"};
        int n = JOptionPane.showOptionDialog(this,
                "Are you sure you want to exit the program? ",
                "Exit program",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, //do not use a custom Icon
                options, //the titles of buttons
                options[0]); //default button title

        if (n == JOptionPane.YES_NO_OPTION) {

            dispose();
            
            /*
            Options: 
            or frame.dispatchEvent(new WindowEvent(frame, WindowEvent.WINDOW_CLOSING));
            setVisible(false); //you can't see me!
            dispose(); //Destroy the JFrame object
            */
        }// end if(n == JOptionPane.YES_NO_OPTION) block
        
    }//GEN-LAST:event_miExitActionPerformed

    /**
     * @param args the command line arguments
             */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Day10Students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Day10Students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Day10Students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Day10Students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Day10Students().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog dlgAddEdit;
    private javax.swing.JButton dlgAddEdit_btCancel;
    private javax.swing.JButton dlgAddEdit_btRmvPic;
    private javax.swing.JButton dlgAddEdit_btSave;
    private javax.swing.JLabel dlgAddEdit_lblId;
    private javax.swing.JLabel dlgAddEdit_lblImage;
    private javax.swing.JTextField dlgAddEdit_tfName;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<Student> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem miEditAddStudent;
    private javax.swing.JMenuItem miExit;
    private javax.swing.JMenuItem miExportCsv;
    private javax.swing.JPopupMenu pMenu;
    private javax.swing.JMenuItem pup_miDelete;
    private javax.swing.JMenuItem pup_miEdit;
    // End of variables declaration//GEN-END:variables
}
